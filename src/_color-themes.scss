// Themes

$bg: "bg";
$fg: "fg";
$lightest-blue: "lightest-blue";
$lighter-blue: "lighter-blue";
$light-blue: "light-blue";
$blue-custom: "blue-custom";
$teal-custom: "teal-custom";
$baby-blue: "baby-blue";
$light-red: "light-red";
$lighter-red: "lighter-red";
$shadow-grey: "shadow-grey";
$white-custom: "white-custom";
$black-custom: "black-custom";

$themes: (
  default: (
    bg: #fff,
    fg: #000,
    lightest-blue: #e7f0ff,
    lighter-blue: #d3e3fc,
    light-blue: #b1cefd,
    blue-custom: #77a6f7,
    teal-custom: #00887a,
    baby-blue: #00bad3,
    light-red: #fd8383,
    lighter-red: #ffccbc,
    shadow-grey: #777,
    white-custom: #fff,
    black-custom: #000,
  ),
  dark: (
    bg: #000,
    fg: #fff,
    lightest-blue: #e7f0ff,
    lighter-blue: #d3e3fc,
    light-blue: #b1cefd,
    blue-custom: #77a6f7,
    teal-custom: #00887a,
    baby-blue: #00bad3,
    light-red: #fd8383,
    lighter-red: #ffccbc,
    shadow-grey: #777,
    white-custom: #000,
    black-custom: #fff,
  )
);

// credit: https://medium.com/@dmitriy.borodiy/easy-color-theming-with-scss-bc38fd5734d1
@mixin themed {
  @each $theme, $map in $themes {
    .theme--#{$theme} & {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge($theme-map, ( $key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

// body rule needs special treatment, although this could probably be heavily simplified
@mixin themed_body {
  @each $theme, $map in $themes {
    .theme--#{$theme} {
      $theme-map: () !global;

      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), "#{$key}");
        $theme-map: map-merge($theme-map, ( $key: $value)) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}
